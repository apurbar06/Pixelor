        -:    0:Source:../src/Main.cpp
        -:    0:Graph:Main.gcno
        -:    0:Data:Main.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:#include <SFML/Graphics.hpp>
        -:    3:#include <cstdlib>
        -:    4:
        -:    5:#include "Utils.hpp"
        -:    6:#include "Quantization.hpp"
        -:    7:
        -:    8:
function main called 1 returned 100% blocks executed 72%
        1:    9:int main(int argc, char** argv)
        -:   10:{
        -:   11:
        2:   12:    std::string fileName = argv[1];
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
call    5 returned 1
call    6 never executed
call    7 never executed
call    8 never executed
        1:   13:    unsigned pixelSize = atoi(argv[2]);
call    0 returned 1
        -:   14:
        -:   15:
        2:   16:    sf::Image rawImage;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 never executed
        2:   17:    sf::Image output;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
call    4 never executed
        -:   18:
        -:   19:
        1:   20:    if(!rawImage.loadFromFile(fileName))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:   21:        return -1;
        -:   22:
        1:   23:    unsigned width  = rawImage.getSize().x;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24:    unsigned height = rawImage.getSize().y;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   25:
        -:   26:
        -:   27:
        1:   28:    if(!sizeIsValid(width, height, pixelSize))
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    #####:   29:        return -1;
        -:   30:
        1:   31:    output.create(width, height, sf::Color::Transparent);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   32:
        -:   33:
        -:   34:    // Quantizing ...
        2:   35:    sf::Image image = quantize_Hist(rawImage, 64);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
call    7 returned 1
call    8 never executed
        -:   36:
        -:   37:
        2:   38:    std::vector<sf::Vector2u> pos;
call    0 returned 1
call    1 returned 1
call    2 never executed
        -:   39:
      101:   40:    for(size_t x(0) ; x < width/pixelSize ; x++)
branch  0 taken 100 (fallthrough)
branch  1 taken 1
    10100:   41:    for(size_t y(0) ; y < height/pixelSize ; y++)
branch  0 taken 10000 (fallthrough)
branch  1 taken 100
        -:   42:    {
    10000:   43:        pos.emplace_back(x,y);
call    0 returned 10000
branch  1 taken 10000 (fallthrough)
branch  2 taken 0 (throw)
        -:   44:    }
        -:   45:
        -:   46:
        -:   47:    // Determining the colors that the pixel should take
        2:   48:    std::vector<sf::Color> colors;
call    0 returned 1
call    1 returned 1
call    2 never executed
    10001:   49:    for(auto& pix : pos)
call    0 returned 1
call    1 returned 1
call    2 returned 10001
branch  3 taken 10000 (fallthrough)
branch  4 taken 1
call    5 returned 10000
call    6 returned 10000
        -:   50:    {
    10000:   51:        unsigned X = pix.x;
    10000:   52:        unsigned Y = pix.y;
        -:   53:
    10000:   54:        colors.clear();
call    0 returned 10000
        -:   55:
        -:   56:
   170000:   57:        for(unsigned dx(0) ; dx < pixelSize ; dx++)
branch  0 taken 160000 (fallthrough)
branch  1 taken 10000
  2720000:   58:        for(unsigned dy(0) ; dy < pixelSize ; dy++)
branch  0 taken 2560000 (fallthrough)
branch  1 taken 160000
        -:   59:        {
  7680000:   60:            colors.push_back(image.getPixel( X * pixelSize + dx,
call    0 returned 2560000
branch  1 taken 2560000 (fallthrough)
branch  2 taken 0 (throw)
  7680000:   61:                                              Y * pixelSize + dy));
call    0 returned 2560000
branch  1 taken 2560000 (fallthrough)
branch  2 taken 0 (throw)
        -:   62:        }
        -:   63:
    10000:   64:        unsigned r(0);
    10000:   65:        unsigned g(0);
    10000:   66:        unsigned b(0);
  2570000:   67:        for(auto& c : colors)
call    0 returned 10000
call    1 returned 10000
call    2 returned 2570000
branch  3 taken 2560000 (fallthrough)
branch  4 taken 10000
call    5 returned 2560000
call    6 returned 2560000
        -:   68:        {
  2560000:   69:            r += c.r;
  2560000:   70:            g += c.g;
  2560000:   71:            b += c.b;
        -:   72:        }
        -:   73:
    10000:   74:        auto tot = colors.size();
call    0 returned 10000
        -:   75:
    10000:   76:        sf::Color newColor( uint8_t(r / tot),
    10000:   77:                            uint8_t(g / tot),
    30000:   78:                            uint8_t(b / tot));
call    0 returned 10000
branch  1 taken 10000 (fallthrough)
branch  2 taken 0 (throw)
        -:   79:
        -:   80:        // Sets the pixelColor
   170000:   81:        for (size_t dx(0) ; dx < pixelSize ; dx++)
branch  0 taken 160000 (fallthrough)
branch  1 taken 10000
  2720000:   82:        for (size_t dy(0) ; dy < pixelSize ; dy++)
branch  0 taken 2560000 (fallthrough)
branch  1 taken 160000
        -:   83:        {
  2560000:   84:            output.setPixel( X * pixelSize + dx,
  2560000:   85:                             Y * pixelSize + dy,
  2560000:   86:                             newColor);
call    0 returned 2560000
branch  1 taken 2560000 (fallthrough)
branch  2 taken 0 (throw)
        -:   87:        }
        -:   88:    }
        -:   89:
        -:   90:
        1:   91:    if (!output.saveToFile("../src/result.png"))
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
call   11 never executed
call   12 never executed
    #####:   92:        return -1;
        -:   93:
        -:   94:    
        -:   95:
        1:   96:    return 0;
function _GLOBAL__sub_I_main called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        3:   97:}
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
branch  3 taken 1 (fallthrough)
branch  4 taken 0
